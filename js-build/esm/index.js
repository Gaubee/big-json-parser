import "./@types";
import "./@go";
export const GO_PKG_NAME = "gaubee.com/json-stream-reader";
export function JsonStreamParserFactory(go) {
    const JSR = go.constructor[GO_PKG_NAME];
    if (JSR === undefined) {
        throw new TypeError(`no found go pkg "${GO_PKG_NAME}"`);
    }
    class JsonStreamParser {
        constructor(data) {
            this._totalLength = 0;
            this._id = JSR.create(data);
        }
        get totalLength() {
            return this._totalLength;
        }
        get walkLength() {
            var _a;
            return ((_a = this._walkLength) !== null && _a !== void 0 ? _a : (this._walkLength = JSR.walkedLength(this._id)));
        }
        write(data) {
            this._totalLength = JSR.write(this._id, data, data.length);
        }
        read(op) {
            this._walkLength = undefined;
            return JSR.walk(this._id, op);
        }
        readSymbol() {
            return this.read(1);
        }
        readObject() {
            return this.read(2);
        }
        readArray() {
            return this.read(3);
        }
    }
    //#region 常量
    JsonStreamParser.WALK_OP = JSR.JsonStreamWalkOperator;
    JsonStreamParser.DELIM = JSR.JsonStreamDelimEnum;
    JsonStreamParser.PAUSE_SIGN = JSR.JsonStreamPauseSignEnum;
    return JsonStreamParser;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi90cy1zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxVQUFVLENBQUM7QUFDbEIsT0FBTyxPQUFPLENBQUM7QUFFZixNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsK0JBQStCLENBQUM7QUFDM0QsTUFBTSxVQUFVLHVCQUF1QixDQUFDLEVBQWE7SUFDbkQsTUFBTSxHQUFHLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUN4QyxJQUFJLEdBQUcsS0FBSyxTQUFTLEVBQUU7UUFDckIsTUFBTSxJQUFJLFNBQVMsQ0FBQyxvQkFBb0IsV0FBVyxHQUFHLENBQUMsQ0FBQztLQUN6RDtJQUNELE1BQU0sZ0JBQWdCO1FBU3BCLFlBQVksSUFBYTtZQURqQixpQkFBWSxHQUFHLENBQUMsQ0FBQztZQUV2QixJQUFJLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDOUIsQ0FBQztRQUNELElBQUksV0FBVztZQUNiLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQztRQUMzQixDQUFDO1FBRUQsSUFBSSxVQUFVOztZQUNaLE9BQU8sT0FBQyxJQUFJLENBQUMsV0FBVyxvQ0FBaEIsSUFBSSxDQUFDLFdBQVcsR0FBSyxHQUFHLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBQyxDQUFDO1FBQzNELENBQUM7UUFDRCxLQUFLLENBQUMsSUFBNkM7WUFDakQsSUFBSSxDQUFDLFlBQVksR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM3RCxDQUFDO1FBQ0QsSUFBSSxDQUFDLEVBQTREO1lBQy9ELElBQUksQ0FBQyxXQUFXLEdBQUcsU0FBUyxDQUFDO1lBQzdCLE9BQU8sR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBMEMsQ0FBQztRQUN6RSxDQUFDO1FBQ0QsVUFBVTtZQUNSLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQWdELENBQUM7UUFDckUsQ0FBQztRQUNELFVBQVU7WUFDUixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFnRCxDQUFDO1FBQ3JFLENBQUM7UUFDRCxTQUFTO1lBQ1AsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBK0MsQ0FBQztRQUNwRSxDQUFDOztJQWpDRCxZQUFZO0lBQ0ksd0JBQU8sR0FBRyxHQUFHLENBQUMsc0JBQXNCLENBQUM7SUFDckMsc0JBQUssR0FBRyxHQUFHLENBQUMsbUJBQW1CLENBQUM7SUFDaEMsMkJBQVUsR0FBRyxHQUFHLENBQUMsdUJBQXVCLENBQUM7SUFnQzNELE9BQU8sZ0JBQXlDLENBQUM7QUFDbkQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBcIi4vQHR5cGVzXCI7XHJcbmltcG9ydCBcIi4vQGdvXCI7XHJcblxyXG5leHBvcnQgY29uc3QgR09fUEtHX05BTUUgPSBcImdhdWJlZS5jb20vanNvbi1zdHJlYW0tcmVhZGVyXCI7XHJcbmV4cG9ydCBmdW5jdGlvbiBKc29uU3RyZWFtUGFyc2VyRmFjdG9yeShnbzogR29XYXNtLkdvKSB7XHJcbiAgY29uc3QgSlNSID0gZ28uY29uc3RydWN0b3JbR09fUEtHX05BTUVdO1xyXG4gIGlmIChKU1IgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgbm8gZm91bmQgZ28gcGtnIFwiJHtHT19QS0dfTkFNRX1cImApO1xyXG4gIH1cclxuICBjbGFzcyBKc29uU3RyZWFtUGFyc2VyIGltcGxlbWVudHMgSnNvblN0cmVhbS5QYXJzZXIge1xyXG4gICAgLy8jcmVnaW9uIOW4uOmHj1xyXG4gICAgc3RhdGljIHJlYWRvbmx5IFdBTEtfT1AgPSBKU1IuSnNvblN0cmVhbVdhbGtPcGVyYXRvcjtcclxuICAgIHN0YXRpYyByZWFkb25seSBERUxJTSA9IEpTUi5Kc29uU3RyZWFtRGVsaW1FbnVtO1xyXG4gICAgc3RhdGljIHJlYWRvbmx5IFBBVVNFX1NJR04gPSBKU1IuSnNvblN0cmVhbVBhdXNlU2lnbkVudW07XHJcbiAgICAvLyNlbmRyZWdpb25cclxuXHJcbiAgICBwcml2YXRlIF9pZDogbnVtYmVyO1xyXG4gICAgcHJpdmF0ZSBfdG90YWxMZW5ndGggPSAwO1xyXG4gICAgY29uc3RydWN0b3IoZGF0YT86IHN0cmluZykge1xyXG4gICAgICB0aGlzLl9pZCA9IEpTUi5jcmVhdGUoZGF0YSk7XHJcbiAgICB9XHJcbiAgICBnZXQgdG90YWxMZW5ndGgoKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLl90b3RhbExlbmd0aDtcclxuICAgIH1cclxuICAgIHByaXZhdGUgX3dhbGtMZW5ndGg/OiBudW1iZXI7XHJcbiAgICBnZXQgd2Fsa0xlbmd0aCgpIHtcclxuICAgICAgcmV0dXJuICh0aGlzLl93YWxrTGVuZ3RoID8/PSBKU1Iud2Fsa2VkTGVuZ3RoKHRoaXMuX2lkKSk7XHJcbiAgICB9XHJcbiAgICB3cml0ZShkYXRhOiBHb1dhc20uR2F1YmVlQ29tX0pzb25TdHJlYW1SZWFkZXIuQ2h1bmspIHtcclxuICAgICAgdGhpcy5fdG90YWxMZW5ndGggPSBKU1Iud3JpdGUodGhpcy5faWQsIGRhdGEsIGRhdGEubGVuZ3RoKTtcclxuICAgIH1cclxuICAgIHJlYWQob3A6IEdvV2FzbS5HYXViZWVDb21fSnNvblN0cmVhbVJlYWRlci5Kc29uU3RyZWFtV2Fsa09wZXJhdG9yKSB7XHJcbiAgICAgIHRoaXMuX3dhbGtMZW5ndGggPSB1bmRlZmluZWQ7XHJcbiAgICAgIHJldHVybiBKU1Iud2Fsayh0aGlzLl9pZCwgb3ApIGFzIFJldHVyblR5cGU8SnNvblN0cmVhbS5QYXJzZXJbXCJyZWFkXCJdPjtcclxuICAgIH1cclxuICAgIHJlYWRTeW1ib2woKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLnJlYWQoMSkgYXMgUmV0dXJuVHlwZTxKc29uU3RyZWFtLlBhcnNlcltcInJlYWRTeW1ib2xcIl0+O1xyXG4gICAgfVxyXG4gICAgcmVhZE9iamVjdCgpIHtcclxuICAgICAgcmV0dXJuIHRoaXMucmVhZCgyKSBhcyBSZXR1cm5UeXBlPEpzb25TdHJlYW0uUGFyc2VyW1wicmVhZE9iamVjdFwiXT47XHJcbiAgICB9XHJcbiAgICByZWFkQXJyYXkoKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLnJlYWQoMykgYXMgUmV0dXJuVHlwZTxKc29uU3RyZWFtLlBhcnNlcltcInJlYWRBcnJheVwiXT47XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiBKc29uU3RyZWFtUGFyc2VyIGFzIEpzb25TdHJlYW0uUGFyc2VyQ3RvcjtcclxufVxyXG4iXX0=