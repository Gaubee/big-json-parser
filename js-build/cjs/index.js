"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.JsonStreamParserFactory = exports.GO_PKG_NAME = void 0;
require("./@types");
require("./@go");
exports.GO_PKG_NAME = "gaubee.com/json-stream-reader";
function JsonStreamParserFactory(go) {
    const JSR = go.constructor[exports.GO_PKG_NAME];
    if (JSR === undefined) {
        throw new TypeError(`no found go pkg "${exports.GO_PKG_NAME}"`);
    }
    class JsonStreamParser {
        constructor(data) {
            this._totalLength = 0;
            this._id = JSR.create(data);
        }
        get totalLength() {
            return this._totalLength;
        }
        get walkLength() {
            var _a;
            return ((_a = this._walkLength) !== null && _a !== void 0 ? _a : (this._walkLength = JSR.walkedLength(this._id)));
        }
        write(data) {
            this._totalLength = JSR.write(this._id, data, data.length);
        }
        read(op) {
            this._walkLength = undefined;
            return JSR.walk(this._id, op);
        }
        readSymbol() {
            return this.read(1);
        }
        readObject() {
            return this.read(2);
        }
        readArray() {
            return this.read(3);
        }
    }
    //#region 常量
    JsonStreamParser.WALK_OP = JSR.JsonStreamWalkOperator;
    JsonStreamParser.DELIM = JSR.JsonStreamDelimEnum;
    JsonStreamParser.PAUSE_SIGN = JSR.JsonStreamPauseSignEnum;
    return JsonStreamParser;
}
exports.JsonStreamParserFactory = JsonStreamParserFactory;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi90cy1zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsb0JBQWtCO0FBQ2xCLGlCQUFlO0FBRUYsUUFBQSxXQUFXLEdBQUcsK0JBQStCLENBQUM7QUFDM0QsU0FBZ0IsdUJBQXVCLENBQUMsRUFBYTtJQUNuRCxNQUFNLEdBQUcsR0FBRyxFQUFFLENBQUMsV0FBVyxDQUFDLG1CQUFXLENBQUMsQ0FBQztJQUN4QyxJQUFJLEdBQUcsS0FBSyxTQUFTLEVBQUU7UUFDckIsTUFBTSxJQUFJLFNBQVMsQ0FBQyxvQkFBb0IsbUJBQVcsR0FBRyxDQUFDLENBQUM7S0FDekQ7SUFDRCxNQUFNLGdCQUFnQjtRQVNwQixZQUFZLElBQWE7WUFEakIsaUJBQVksR0FBRyxDQUFDLENBQUM7WUFFdkIsSUFBSSxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzlCLENBQUM7UUFDRCxJQUFJLFdBQVc7WUFDYixPQUFPLElBQUksQ0FBQyxZQUFZLENBQUM7UUFDM0IsQ0FBQztRQUVELElBQUksVUFBVTs7WUFDWixPQUFPLE9BQUMsSUFBSSxDQUFDLFdBQVcsb0NBQWhCLElBQUksQ0FBQyxXQUFXLEdBQUssR0FBRyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUMsQ0FBQztRQUMzRCxDQUFDO1FBQ0QsS0FBSyxDQUFDLElBQTZDO1lBQ2pELElBQUksQ0FBQyxZQUFZLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDN0QsQ0FBQztRQUNELElBQUksQ0FBQyxFQUE0RDtZQUMvRCxJQUFJLENBQUMsV0FBVyxHQUFHLFNBQVMsQ0FBQztZQUM3QixPQUFPLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQTBDLENBQUM7UUFDekUsQ0FBQztRQUNELFVBQVU7WUFDUixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFnRCxDQUFDO1FBQ3JFLENBQUM7UUFDRCxVQUFVO1lBQ1IsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBZ0QsQ0FBQztRQUNyRSxDQUFDO1FBQ0QsU0FBUztZQUNQLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQStDLENBQUM7UUFDcEUsQ0FBQzs7SUFqQ0QsWUFBWTtJQUNJLHdCQUFPLEdBQUcsR0FBRyxDQUFDLHNCQUFzQixDQUFDO0lBQ3JDLHNCQUFLLEdBQUcsR0FBRyxDQUFDLG1CQUFtQixDQUFDO0lBQ2hDLDJCQUFVLEdBQUcsR0FBRyxDQUFDLHVCQUF1QixDQUFDO0lBZ0MzRCxPQUFPLGdCQUF5QyxDQUFDO0FBQ25ELENBQUM7QUExQ0QsMERBMENDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwiLi9AdHlwZXNcIjtcclxuaW1wb3J0IFwiLi9AZ29cIjtcclxuXHJcbmV4cG9ydCBjb25zdCBHT19QS0dfTkFNRSA9IFwiZ2F1YmVlLmNvbS9qc29uLXN0cmVhbS1yZWFkZXJcIjtcclxuZXhwb3J0IGZ1bmN0aW9uIEpzb25TdHJlYW1QYXJzZXJGYWN0b3J5KGdvOiBHb1dhc20uR28pIHtcclxuICBjb25zdCBKU1IgPSBnby5jb25zdHJ1Y3RvcltHT19QS0dfTkFNRV07XHJcbiAgaWYgKEpTUiA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGBubyBmb3VuZCBnbyBwa2cgXCIke0dPX1BLR19OQU1FfVwiYCk7XHJcbiAgfVxyXG4gIGNsYXNzIEpzb25TdHJlYW1QYXJzZXIgaW1wbGVtZW50cyBKc29uU3RyZWFtLlBhcnNlciB7XHJcbiAgICAvLyNyZWdpb24g5bi46YePXHJcbiAgICBzdGF0aWMgcmVhZG9ubHkgV0FMS19PUCA9IEpTUi5Kc29uU3RyZWFtV2Fsa09wZXJhdG9yO1xyXG4gICAgc3RhdGljIHJlYWRvbmx5IERFTElNID0gSlNSLkpzb25TdHJlYW1EZWxpbUVudW07XHJcbiAgICBzdGF0aWMgcmVhZG9ubHkgUEFVU0VfU0lHTiA9IEpTUi5Kc29uU3RyZWFtUGF1c2VTaWduRW51bTtcclxuICAgIC8vI2VuZHJlZ2lvblxyXG5cclxuICAgIHByaXZhdGUgX2lkOiBudW1iZXI7XHJcbiAgICBwcml2YXRlIF90b3RhbExlbmd0aCA9IDA7XHJcbiAgICBjb25zdHJ1Y3RvcihkYXRhPzogc3RyaW5nKSB7XHJcbiAgICAgIHRoaXMuX2lkID0gSlNSLmNyZWF0ZShkYXRhKTtcclxuICAgIH1cclxuICAgIGdldCB0b3RhbExlbmd0aCgpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuX3RvdGFsTGVuZ3RoO1xyXG4gICAgfVxyXG4gICAgcHJpdmF0ZSBfd2Fsa0xlbmd0aD86IG51bWJlcjtcclxuICAgIGdldCB3YWxrTGVuZ3RoKCkge1xyXG4gICAgICByZXR1cm4gKHRoaXMuX3dhbGtMZW5ndGggPz89IEpTUi53YWxrZWRMZW5ndGgodGhpcy5faWQpKTtcclxuICAgIH1cclxuICAgIHdyaXRlKGRhdGE6IEdvV2FzbS5HYXViZWVDb21fSnNvblN0cmVhbVJlYWRlci5DaHVuaykge1xyXG4gICAgICB0aGlzLl90b3RhbExlbmd0aCA9IEpTUi53cml0ZSh0aGlzLl9pZCwgZGF0YSwgZGF0YS5sZW5ndGgpO1xyXG4gICAgfVxyXG4gICAgcmVhZChvcDogR29XYXNtLkdhdWJlZUNvbV9Kc29uU3RyZWFtUmVhZGVyLkpzb25TdHJlYW1XYWxrT3BlcmF0b3IpIHtcclxuICAgICAgdGhpcy5fd2Fsa0xlbmd0aCA9IHVuZGVmaW5lZDtcclxuICAgICAgcmV0dXJuIEpTUi53YWxrKHRoaXMuX2lkLCBvcCkgYXMgUmV0dXJuVHlwZTxKc29uU3RyZWFtLlBhcnNlcltcInJlYWRcIl0+O1xyXG4gICAgfVxyXG4gICAgcmVhZFN5bWJvbCgpIHtcclxuICAgICAgcmV0dXJuIHRoaXMucmVhZCgxKSBhcyBSZXR1cm5UeXBlPEpzb25TdHJlYW0uUGFyc2VyW1wicmVhZFN5bWJvbFwiXT47XHJcbiAgICB9XHJcbiAgICByZWFkT2JqZWN0KCkge1xyXG4gICAgICByZXR1cm4gdGhpcy5yZWFkKDIpIGFzIFJldHVyblR5cGU8SnNvblN0cmVhbS5QYXJzZXJbXCJyZWFkT2JqZWN0XCJdPjtcclxuICAgIH1cclxuICAgIHJlYWRBcnJheSgpIHtcclxuICAgICAgcmV0dXJuIHRoaXMucmVhZCgzKSBhcyBSZXR1cm5UeXBlPEpzb25TdHJlYW0uUGFyc2VyW1wicmVhZEFycmF5XCJdPjtcclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIEpzb25TdHJlYW1QYXJzZXIgYXMgSnNvblN0cmVhbS5QYXJzZXJDdG9yO1xyXG59XHJcbiJdfQ==